{"version":3,"sources":["App.js","index.js"],"names":["App","useState","todo","settodo","value","setvalue","username","setusername","password","setpassword","user","setuser","passwordRegister","setpasswordRegister","usernameRegister","setusernameRegister","tok","settok","baseUrl","useEffect","loggedUser","window","localStorage","getItem","JSON","parse","setToken","token","location","reload","fetchData","newToken","a","console","log","id","axios","get","fetch","data","handleRegisterSubmit","e","preventDefault","post","removeTodo","delete","UpdateTodo","textt","text","prompt","put","handleLoginSubmit","event","setItem","stringify","className","Form","onSubmit","Group","Label","Control","class","type","placeholder","onChange","target","controlId","Button","variant","Card","Body","onClick","removeItem","config","headers","Authorization","then","res","handleSubmit","length","map","t","style","width","Title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5af44c8e.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Alert, Card, Form } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\n\nfunction App() {\n   const [todo, settodo] = useState([]);\n   const [value, setvalue] = useState(\"\");\n   const [username, setusername] = useState(\"\");\n   const [password, setpassword] = useState(\"\");\n   const [user, setuser] = useState(null);\n   const [passwordRegister, setpasswordRegister] = useState(\"\");\n   const [usernameRegister, setusernameRegister] = useState(\"\");\n\n   const [tok, settok] = useState(null);\n\n   const baseUrl = \"https://todo-app-0212.herokuapp.com/todos\";\n   const loginUrl = \"https://todo-app-0212.herokuapp.com/login\";\n   const userUrl = \"https://todo-app-0212.herokuapp.com/user\";\n\n   // const baseUrl = \"http://localhost:3001/todos\";\n   // const loginUrl = \"http://localhost:3001/login\";\n   // const userUrl = \"http://localhost:3001/user\";\n   // Token shit\n\n   useEffect(() => {\n      const loggedUser = window.localStorage.getItem(\"loggedUser\");\n\n      if (loggedUser) {\n         const user = JSON.parse(loggedUser);\n         setuser(user);\n         setToken(user.token);\n         if (!user) {\n            window.location.reload(false);\n         }\n         if (user) {\n            fetchData(user);\n         }\n      }\n   }, []);\n\n   // useEffect(() => {\n   //    fetchData();\n   // }, []);\n\n   const setToken = (newToken) => {\n      settok(`bearer ${newToken}`);\n   };\n\n   async function fetchData(user) {\n      try {\n         console.log(\"====================================\");\n         console.log(user.id);\n         console.log(\"====================================\");\n         if (!user) {\n            window.location.reload(false);\n         }\n\n         const fetch = await axios.get(`${baseUrl}/${user.id}`);\n         console.log(fetch.data);\n\n         settodo(fetch.data);\n\n         // if (user) {\n\n         //    console.log(user.id);\n         //    let flag = false;\n         //    fetch.data.map((tod) => {\n         //       console.log(\"====================================\");\n         //       console.log(tod);\n         //       console.log(\"====================================\");\n         //       tod.user.map((use) => {\n         //          if (use.username === user.username) {\n         //             const newTodo = todo.concat(tod);\n         //             settodo(newTodo);\n         //             console.log(newTodo);\n         //          }\n         //       });\n         //    });\n\n         // }\n      } catch (err) {\n         window.location.reload(true);\n      }\n      //change hardcore url  here..............\n   }\n\n   const handleRegisterSubmit = async (e) => {\n      e.preventDefault();\n      try {\n         if (usernameRegister && passwordRegister) {\n            const data = await axios.post(userUrl, {\n               username: usernameRegister,\n               password: passwordRegister,\n            });\n\n            console.log(data);\n            setusernameRegister(\"\");\n            setpasswordRegister(\"\");\n         }\n      } catch (err) {\n         console.log(err);\n      }\n   };\n\n   const handleSubmit = (e) => {\n      // addTodo(value);\n      e.preventDefault();\n      let text = value;\n      const config = { headers: { Authorization: tok } };\n\n      axios.post(baseUrl, { text }, config).then((res) => {\n         window.location.reload(true);\n         fetchData(user);\n         setvalue(\"\");\n         console.log(res);\n      });\n      // try {\n      //    await axios.post(baseUrl, { text }, config);\n      //    fetchData(user);\n      //    setvalue(\"\");\n      // } catch (err) {\n      //    console.log(err);\n      // }\n\n      //    window.reload(true);\n      //    fetchData(user);\n      //    setvalue(\"\");\n      //    console.log(res);\n      // });\n   };\n\n   const removeTodo = async (id, e) => {\n      e.preventDefault();\n      await axios.delete(`${baseUrl}/${id}`);\n      fetchData(user);\n   };\n\n   const UpdateTodo = async (e, id, textt) => {\n      e.preventDefault();\n      let text = prompt(\"Type the corrected form \");\n      await axios.put(`${baseUrl}/${id}`, { text });\n\n      fetchData(user);\n   };\n   const alert = () => {\n      return <Alert variant=\"danger\">Wrong Credentials</Alert>;\n   };\n\n   const handleLoginSubmit = async (event) => {\n      event.preventDefault();\n      try {\n         console.log(\"logging in with\", username, password);\n         const data = await axios.post(loginUrl, { username, password });\n         window.localStorage.setItem(\"loggedUser\", JSON.stringify(data.data));\n         setToken(data.data.token);\n         setuser(data.data);\n\n         setusername(\"\");\n         setpassword(\"\");\n\n         fetchData();\n      } catch (error) {}\n   };\n\n   const handleLogout = (event) => {\n      event.preventDefault();\n      window.localStorage.removeItem(\"loggedUser\");\n      window.location.reload(false);\n   };\n   // for token and shit:\n\n   return (\n      <div className=\"App\">\n         {user === null ? (\n            <div className=\"auth\">\n               <div className=\"register\">\n                  <h3>Register</h3>{\" \"}\n                  <Form onSubmit={handleRegisterSubmit}>\n                     <Form.Group className=\"mb-3\">\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                           class=\"padding\"\n                           type=\"name\"\n                           placeholder=\"enter your username\"\n                           onChange={(e) => setusernameRegister(e.target.value)}\n                        />\n                     </Form.Group>\n                     <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                           class=\"padding\"\n                           onChange={(e) => setpasswordRegister(e.target.value)}\n                           type=\"password\"\n                           placeholder=\"Password\"\n                        />\n                     </Form.Group>\n                     <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                     </Button>\n                  </Form>\n               </div>\n               <div className=\"login\">\n                  <h3>Login</h3>\n                  <Form onSubmit={handleLoginSubmit}>\n                     <Form.Group className=\"mb-3\">\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                           type=\"name\"\n                           placeholder=\"enter your username\"\n                           onChange={(e) => setusername(e.target.value)}\n                        />\n                     </Form.Group>\n                     <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                           onChange={(e) => setpassword(e.target.value)}\n                           type=\"password\"\n                           placeholder=\"Password\"\n                        />\n                     </Form.Group>\n                     <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                     </Button>\n                  </Form>\n               </div>\n            </div>\n         ) : (\n            <Card>\n               <Card.Body className=\"d-flex justify-content-between\">\n                  Logged in as {user.username}\n                  <Button variant=\"danger\" onClick={handleLogout}>\n                     Logout\n                  </Button>\n               </Card.Body>\n            </Card>\n         )}\n\n         <div className=\"top\">\n            <h2 className=\"top-header\">Todo list</h2>\n            <form\n               className=\"top-form\"\n               onSubmit={(e) => {\n                  handleSubmit(e);\n               }}\n            >\n               <input\n                  className=\"top-input\"\n                  type=\"text\"\n                  value={value}\n                  onChange={(e) => setvalue(e.target.value)}\n                  placeholder=\"Enter a task...\"\n               />\n               <Button type=\"submit\" variant=\"outline-success\">\n                  ✓\n               </Button>{\" \"}\n            </form>\n         </div>\n\n         {todo.length > 0 &&\n            todo.map((t) => (\n               <Card key={t.id} style={{ width: \"100%\" }}>\n                  <Card.Body className=\"task\">\n                     <Card.Title className=\"textTitle\">{t.text}</Card.Title>\n\n                     <div className=\"buttons\">\n                        <Button\n                           variant=\"outline-primary\"\n                           onClick={(e) => UpdateTodo(e, t.id, t.text)}\n                        >\n                           ✎\n                        </Button>\n                        <Button\n                           className=\"removeButton\"\n                           variant=\"outline-danger\"\n                           onClick={(e) => removeTodo(t.id, e)}\n                        >\n                           ✕\n                        </Button>\n                     </div>\n                  </Card.Body>\n               </Card>\n            ))}\n      </div>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}